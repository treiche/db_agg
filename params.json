{"name":"Db agg","tagline":"Aggregator for query results over multiple data sources","body":"db_agg\r\n======\r\n\r\njoin multiple datasources with a single query\r\n\r\ndb_agg is a commandline tool which processes a single postgres sql query consisting of multiple\r\ncommon table expressions (WITH statements) that are referring to *different* databases.\r\n\r\nMotivation\r\n----------\r\n\r\nComparing data across multiple databases can be cumbersome especially when sharding and multiple test of production environments comes in play. Most of the time this work consists of well defined steps that can be easily automatized.\r\n\r\ndb_agg requires a single query and determines the concrete databases it needs to talk to, resolves the\r\ndependencies that are needed to join the query results, and caches the results for a short development roundtrip.\r\n\r\nInstallation\r\n------------\r\nCompilation is performed using conventional gnu autotools build system as shown below:\r\n* ./configure\r\n* make\r\n* make install\r\n\r\nConfiguration\r\n-------------\r\nBefore db_agg can be used it needs to know where it can find databases to connect to.\r\nThis is configured in a file called database-registry.xml located in ~/.db_agg/etc.\r\nA very simple example is shown below:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!DOCTYPE registry PUBLIC \"database-registry.dtd\" \"/usr/local/db_agg/etc/database-registry.dtd\">\r\n<registry>\r\n    <system name=\"local\">\r\n        <host name=\"host1\">\r\n            <server port=\"5432\">\r\n                <database-instance id=\"db1\"/>\r\n            </server>\r\n        </host>\r\n        <host name=\"host2\">\r\n            <server port=\"5432\">\r\n                <database-instance id=\"db2\"/>\r\n            </server>\r\n        </host>\r\n    </system>\r\n    <database-definition name=\"db1\">\r\n        <namespace name=\"ns1\"/>\r\n    </database-definition>\r\n    <database-definition name=\"db2\">\r\n        <namespace name=\"ns2\"/>\r\n    </database-definition>\r\n</registry>\r\n``` \r\nThis instructs db_agg to connect to host1 on port 5432 when it finds the namespace ns1 in the sub query.\r\n\r\nUsage\r\n-----\r\nWith the configuration given above, db_agg could be used with a query like follows:\r\n```sql\r\nwith data_on_db1 as (\r\n    select *\r\n      from ns1.data\r\n)\r\n    select *\r\n      from data_on_db1\r\n      join ns2.data\r\n        on column_x = column_y\r\n```\r\nSave this query as test_query.sql and tun db_agg on the command line:\r\n```sh\r\n/usr/local/bin/db_agg -e local test_query.sql\r\n```\r\nthe results of running db_agg can be afterwards found in the working directory under\r\n./test_query/local\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}